From c70d00b9bbcc4c4870edb49fed2fee55aa658ef0 Mon Sep 17 00:00:00 2001
From: turmary <turmary@126.com>
Date: Sun, 22 May 2022 23:50:35 +0800
Subject: [PATCH 4/4] Fixed: compiling errors if CONFIG...OF_PLATDATA enabled

---
 arch/arm/mach-rockchip/rk3399/rk3399.c | 2 ++
 configs/firefly-rk3399_defconfig       | 2 +-
 tools/dtoc/src_scan.py                 | 2 +-
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-rockchip/rk3399/rk3399.c b/arch/arm/mach-rockchip/rk3399/rk3399.c
index 869d215..64133ac 100644
--- a/arch/arm/mach-rockchip/rk3399/rk3399.c
+++ b/arch/arm/mach-rockchip/rk3399/rk3399.c
@@ -189,6 +189,7 @@ const char *spl_decode_boot_device(u32 boot_device)
 	return NULL;
 }
 
+#if CONFIG_IS_ENABLED(LOAD_FIT) || CONFIG_IS_ENABLED(LOAD_FIT_FULL)
 void spl_perform_fixups(struct spl_image_info *spl_image)
 {
 	void *blob = spl_image->fdt_addr;
@@ -217,6 +218,7 @@ void spl_perform_fixups(struct spl_image_info *spl_image)
 	fdt_setprop_string(blob, chosen,
 			   "u-boot,spl-boot-device", boot_ofpath);
 }
+#endif
 
 #if defined(SPL_GPIO_SUPPORT)
 static void rk3399_force_power_on_reset(void)
diff --git a/configs/firefly-rk3399_defconfig b/configs/firefly-rk3399_defconfig
index 2ca2ac3..ea73ef9 100644
--- a/configs/firefly-rk3399_defconfig
+++ b/configs/firefly-rk3399_defconfig
@@ -24,7 +24,7 @@ CONFIG_CMD_USB=y
 # CONFIG_CMD_SETEXPR is not set
 CONFIG_CMD_TIME=y
 CONFIG_SPL_OF_CONTROL=y
-CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents cd-gpios"
 CONFIG_ENV_IS_IN_MMC=y
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_ROCKCHIP_GPIO=y
diff --git a/tools/dtoc/src_scan.py b/tools/dtoc/src_scan.py
index 2db9688..1dbb567 100644
--- a/tools/dtoc/src_scan.py
+++ b/tools/dtoc/src_scan.py
@@ -555,7 +555,7 @@ class Scanner:
                 if ids_m:
                     ids_name = ids_m.group(1)
                 elif m_alias:
-                    self._driver_aliases[m_alias[2]] = m_alias[1]
+                    self._driver_aliases[m_alias.group(2)] = m_alias.group(1)
 
         # Make the updates based on what we found
         for driver in drivers.values():
-- 
2.7.4

